from TP.simple_genetic_algorithm import SGA

BIN_ALPHABET = ["0", "1"]
STRING_LEN = 16
NUMBER_OF_VARIABLES = 2
VARIABLE_LEN = 8
PROBABILITY_OF_MUTATION = 0.04
PROBABILITY_OF_CROSSOVER = 0.7
NUM_STRINGS = 100
NUM_GENERATIONS = 100
DOMAIN_START = -2
DOMAIN_END = 2


def rosenbrock(*xs):
    x = xs[0]
    y = xs[1]
    return (1-x)**2+100*(y-x**2)**2


SGA(rosenbrock, NUM_STRINGS, BIN_ALPHABET, STRING_LEN, VARIABLE_LEN, DOMAIN_START, DOMAIN_END, NUM_GENERATIONS,
    PROBABILITY_OF_MUTATION, PROBABILITY_OF_MUTATION)
